// ======================================================================
// Haunted Wasteland
//   Advent of Code 2023 Day 08 -- Eric Wastl -- https://adventofcode.com
//
// go implementation by Dr. Dean Earl Wright III
// based on https://siongui.github.io/2017/06/03/go-find-lcm-by-gcd/
// ======================================================================

// ======================================================================
//                              l c m . g o
// ======================================================================
// Lcm for the Advent of Code 2023 Day 08 puzzle

package main

// ----------------------------------------------------------------------
//                                                                imports
// ----------------------------------------------------------------------

// ----------------------------------------------------------------------
//                                                              constants
// ----------------------------------------------------------------------
const ()

// ======================================================================
//                                                                    GCD
// ======================================================================

// GCD ... greatest common divisor (GCD) via Euclidean algorithm
func GCD(a, b int) int {
	for b != 0 {
		t := b
		b = a % b
		a = t
	}
	return a
}

// ======================================================================
//                                                                    LCM
// ======================================================================

// LCM ... find Least Common Multiple (LCM) via GCD
func LCM(ints []int) int {
	if len(ints) == 0 {
		return 0
	}
	if len(ints) == 1 {
		return ints[0]
	}
	result := ints[0]

	for i := 0; i < len(ints); i++ {
		result = result * ints[i] / GCD(result, ints[i])
	}

	return result
}

// ======================================================================
// end                           l c m . g o                          end
// ======================================================================
