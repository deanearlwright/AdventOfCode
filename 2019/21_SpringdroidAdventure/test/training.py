# ======================================================================
# Springdroid Adventure
#   Advent of Code 2019 Day 21 -- Eric Wastl -- https://adventofcode.com
#
# Computer simulation by Dr. Dean Earl Wright III
# ======================================================================

# ======================================================================
#                         t r a i n i n g . p y
# ======================================================================
"Training cases for Springdroid Adventure problem for AoC 2019 Day 21"

# ----------------------------------------------------------------------
#                                                                 import
# ----------------------------------------------------------------------


# ----------------------------------------------------------------------
#                                                              constants
# ----------------------------------------------------------------------

# from https://pastebin.com/raw/JJmEHarU

# part 1: 7 cases
TRAINING1 = """##########.######################
##########.##.###################
##########.#.####################
##########.#..###################
##########..#####################
##########..#.###################
##########...####################"""

# part 2: 160 cases
TRAINING2 = """##########.######################
##########.#######.##############
##########.######.###############
##########.######..##############
##########.#####.################
##########.#####.#.##############
##########.#####..###############
##########.#####...##############
##########.####.#################
##########.####.##.##############
##########.####.#.###############
##########.####.#..##############
##########.####..################
##########.####..#.##############
##########.####...###############
##########.###.##################
##########.###.###.##############
##########.###.##.###############
##########.###.##..##############
##########.###.#.################
##########.###.#.#.##############
##########.###.#..###############
##########.###.#...##############
##########.###..#################
##########.###..##.##############
##########.###..#.###############
##########.###..#..##############
##########.###...################
##########.###...#.##############
##########.##.###################
##########.##.####.##############
##########.##.###.###############
##########.##.###..##############
##########.##.##.################
##########.##.##.#.##############
##########.##.##..###############
##########.##.##...##############
##########.##.#.#################
##########.##.#.##.##############
##########.##.#.#.###############
##########.##.#.#..##############
##########.##..##################
##########.##..###.##############
##########.##..##.###############
##########.##..##..##############
##########.##..#.################
##########.##..#.#.##############
##########.##..#..###############
##########.##..#...##############
##########.##...#################
##########.##...##.##############
##########.##...#.###############
##########.##...#..##############
##########.#.####################
##########.#.#####.##############
##########.#.####.###############
##########.#.####..##############
##########.#.###.################
##########.#.###.#.##############
##########.#.###..###############
##########.#.###...##############
##########.#.##.#################
##########.#.##.##.##############
##########.#.##.#.###############
##########.#.##..################
##########.#.##..#.##############
##########.#.##...###############
##########.#.#.##################
##########.#.#.###.##############
##########.#.#.##.###############
##########.#.#.##..##############
##########.#.#.#.################
##########.#.#.#.#.##############
##########.#.#.#..###############
##########.#.#.#...##############
##########.#.#..#################
##########.#.#..##.##############
##########.#.#...################
##########.#.#...#.##############
##########.#..###################
##########.#..####.##############
##########.#..###.###############
##########.#..###..##############
##########.#..##.################
##########.#..##.#.##############
##########.#..##..###############
##########.#..##...##############
##########.#...##################
##########.#...###.##############
##########.#...##.###############
##########.#...##..##############
##########.#...#.################
##########.#...#.#.##############
##########.#...#..###############
##########.#...#...##############
##########..#####################
##########..######.##############
##########..#####.###############
##########..#####..##############
##########..####.################
##########..####.#.##############
##########..####..###############
##########..####...##############
##########..###.#################
##########..###.##.##############
##########..###.#.###############
##########..###.#..##############
##########..###..################
##########..###..#.##############
##########..###...###############
##########..##.##################
##########..##.###.##############
##########..##.##.###############
##########..##.##..##############
##########..##.#.################
##########..##.#.#.##############
##########..##..#################
##########..##..##.##############
##########..##..#.###############
##########..##..#..##############
##########..##...################
##########..##...#.##############
##########..#.###################
##########..#.####.##############
##########..#.###.###############
##########..#.###..##############
##########..#.#.#################
##########..#.#.##.##############
##########..#.#.#.###############
##########..#.#.#..##############
##########..#..##################
##########..#..###.##############
##########..#..##.###############
##########..#..##..##############
##########..#...#################
##########..#...##.##############
##########..#...#.###############
##########..#...#..##############
##########...####################
##########...#####.##############
##########...####.###############
##########...####..##############
##########...###.################
##########...###.#.##############
##########...###..###############
##########...###...##############
##########...##.#################
##########...##.##.##############
##########...##.#.###############
##########...##..################
##########...##..#.##############
##########...##...###############
##########...#.##################
##########...#.###.##############
##########...#.#.################
##########...#.#.#.##############
##########...#..#################
##########...#..##.##############
##########...#...################
##########...#...#.##############"""

TRAININGS = [None, TRAINING1, TRAINING2]

SENSORS1 = 'ABCD'
SENSORS2 = 'ABCDEFGHI'

SENSORS = [None, SENSORS1, SENSORS2]

SVALUE = {'.': 'F', '#': 'T'}

WALK = 1
JUMP = 4

# ======================================================================
#                                                                  Train
# ======================================================================


class Train():
    """Object representing the training cases for the Springdroid"""

    def __init__(self, part=1):

        # 1. Set the initial values
        self.cases = TRAININGS[part].split('\n')

    def __iter__(self):
        return self

    def __next__(self):
        try:
            return self.cases.pop()
        except:
            raise StopIteration


# ======================================================================
#                                                                  Train
# ======================================================================
class Table():
    """Object representing a table for training the Springdroid"""

    def __init__(self, part=1):

        # 1. Set the initial values
        self.part = part
        self.cases = Train(part)

    def produce_table(self):
        "Produce the training table"

        # 1. Loop for all the training cases
        for cnum, case in enumerate(self.cases):
            clen = len(case)

            # 2. Output the case itself
            print("%3d %s" % (1 + cnum, case))

            # 3. Loop for all the sensors
            for snum, sensor in enumerate(SENSORS[self.part]):

                # 4. Get the sensor values
                readings = [SVALUE[case[_ + snum]] for _ in range(1, clen - snum)]

                # 5. Output the readings
                print("  %s %s" % (sensor, ''.join(readings)))

            # 6. Seperate the cases
            print()



# ----------------------------------------------------------------------
#                                                  module initialization
# ----------------------------------------------------------------------
if __name__ == '__main__':
    print('Part One')
    table = Table(part=1)
    table.produce_table()

    print()
    print()
    print('Part Two')
    table = Table(part=2)
    table.produce_table()

# ======================================================================
# end                      t r a i n i n g . p y                     end
# ======================================================================
